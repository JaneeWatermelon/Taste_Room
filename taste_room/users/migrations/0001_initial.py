# Generated by Django 5.1.6 on 2025-04-13 08:09

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('additions', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('news', '0001_initial'),
        ('recipes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='–ù–∞–∑–≤–∞–Ω–∏–µ')),
            ],
            options={
                'verbose_name': '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
                'verbose_name_plural': '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=64, null=True, verbose_name='–ù–∞–∑–≤–∞–Ω–∏–µ')),
                ('hash', models.CharField(max_length=64, verbose_name='–¶–≤–µ—Ç —Ñ–æ–Ω–∞')),
                ('text_hash', models.CharField(default='#000000', max_length=64, verbose_name='–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞')),
                ('sort_order', models.PositiveSmallIntegerField(default=0, verbose_name='–ü–æ–ª–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏')),
            ],
            options={
                'verbose_name': '–¶–≤–µ—Ç —Ñ–æ–Ω–∞',
                'verbose_name_plural': '–¶–≤–µ—Ç–∞ —Ñ–æ–Ω–∞',
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='GeneralAchievementCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='–û–±—â–µ–µ —É—Å–ª–æ–≤–∏–µ')),
            ],
            options={
                'verbose_name': '–£—Å–ª–æ–≤–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
                'verbose_name_plural': '–£—Å–ª–æ–≤–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π',
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='–ù–∞–∑–≤–∞–Ω–∏–µ')),
                ('icon', models.FileField(upload_to='achiv_icons/', verbose_name='–ò–∫–æ–Ω–∫–∞')),
                ('level', models.PositiveSmallIntegerField(choices=[(1, '–°–µ—Ä–µ–±—Ä–æ'), (2, '–ó–æ–ª–æ—Ç–æ'), (3, '–†—É–±–∏–Ω')], verbose_name='–£—Ä–æ–≤–µ–Ω—å')),
                ('condition_self', models.CharField(max_length=128, verbose_name='–ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.categoryachievement', verbose_name='–ö–∞—Ç–µ–≥–æ—Ä–∏—è')),
                ('condition_general', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.generalachievementcondition', verbose_name='–û–±—â–µ–µ —É—Å–ª–æ–≤–∏–µ')),
            ],
            options={
                'verbose_name': '–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ',
                'verbose_name_plural': '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, default='–í–∫—É—Å–Ω–∞—è –ø–µ—á–µ–Ω—å–∫–∞ üç™', max_length=32, null=True, verbose_name='–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='users_avatars/', verbose_name='–ê–≤–∞—Ç–∞—Ä–∫–∞')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞')),
                ('description_profile', models.TextField(blank=True, default='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–π –ø—Ä–æ—Ñ–∏–ª—å! –Ø —É–≤–ª–µ—á–µ–Ω(–∞) –∫—É–ª–∏–Ω–∞—Ä–∏–µ–π –∏ –≤–µ—Ä—é, —á—Ç–æ –≤–∫—É—Å–Ω–∞—è –µ–¥–∞ –¥–µ–ª–∞–µ—Ç –∂–∏–∑–Ω—å —è—Ä—á–µ. –ù–∞–¥–µ—é—Å—å, –º–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã –∏ —Å–æ–≤–µ—Ç—ã –±—É–¥—É—Ç –ø–æ–ª–µ–∑–Ω—ã –¥–ª—è –≤–∞—Å!', max_length=512, null=True, verbose_name='–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è')),
                ('description_recipe', models.TextField(blank=True, default='–ü—Ä–∏–≤–µ—Ç! –Ø –æ–±–æ–∂–∞—é –≥–æ—Ç–æ–≤–∏—Ç—å –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –∫—É—Ö–Ω–µ. –î–ª—è –º–µ–Ω—è –∫—É–ª–∏–Ω–∞—Ä–∏—è ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å, –∞ –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ. –ë—É–¥—É —Ä–∞–¥(–∞) –¥–µ–ª–∏—Ç—å—Å—è —Å –≤–∞–º–∏ —Å–≤–æ–∏–º–∏ –ª—é–±–∏–º—ã–º–∏ —Ä–µ—Ü–µ–ø—Ç–∞–º–∏ –∏ —Å–æ–≤–µ—Ç–∞–º–∏!', max_length=512, null=True, verbose_name='–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞')),
                ('description_news', models.TextField(blank=True, default='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–π –∫—É–ª–∏–Ω–∞—Ä–Ω—ã–π –±–ª–æ–≥! –ó–¥–µ—Å—å —è –¥–µ–ª—é—Å—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ —Ñ–∞–∫—Ç–∞–º–∏, —Å–æ–≤–µ—Ç–∞–º–∏ –∏ –∏—Å—Ç–æ—Ä–∏—è–º–∏ –æ –µ–¥–µ. –ù–∞–¥–µ—é—Å—å, –º–æ–∏ —Å—Ç–∞—Ç—å–∏ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –æ—Ç–∫—Ä—ã—Ç—å –¥–ª—è —Å–µ–±—è —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ –∏ –≤–¥–æ—Ö–Ω–æ–≤—è—Ç –Ω–∞ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã!', max_length=512, null=True, verbose_name='–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç—å–∏')),
                ('disliked_news_comments', models.ManyToManyField(blank=True, related_name='disliked_news_comments_set', to='news.newscomment', verbose_name='–î–∏–∑–ª–∞–π–∫–Ω—É—Ç—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å—Ç–∞—Ç–µ–π')),
                ('disliked_recipe_comments', models.ManyToManyField(blank=True, related_name='disliked_recipe_comments_set', to='recipes.recipecomment', verbose_name='–î–∏–∑–ª–∞–π–∫–Ω—É—Ç—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('liked_news_comments', models.ManyToManyField(blank=True, related_name='liked_news_comments_set', to='news.newscomment', verbose_name='–õ–∞–π–∫–Ω—É—Ç—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å—Ç–∞—Ç—å–∏')),
                ('liked_recipe_comments', models.ManyToManyField(blank=True, related_name='liked_recipe_comments_set', to='recipes.recipecomment', verbose_name='–õ–∞–π–∫–Ω—É—Ç—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ä–µ—Ü–µ–ø—Ç–∞')),
                ('liked_recipes', models.ManyToManyField(blank=True, to='recipes.recipe', verbose_name='–ü–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è —Ä–µ—Ü–µ–ø—Ç—ã')),
                ('socials', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='additions.socials', verbose_name='–°–æ—Ü—Å–µ—Ç–∏')),
                ('subscribers', models.ManyToManyField(blank=True, related_name='subscribers_set', to=settings.AUTH_USER_MODEL, verbose_name='–ü–æ–¥–ø–∏—Å—á–∏–∫–∏')),
                ('subscriptions', models.ManyToManyField(blank=True, related_name='subscriptions_set', to=settings.AUTH_USER_MODEL, verbose_name='–ü–æ–¥–ø–∏—Å–∫–∏')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('achivs', models.ManyToManyField(blank=True, related_name='achivs_set', to='users.achievement', verbose_name='–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è')),
                ('choosed_achiv', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='choosed_achiv_set', to='users.achievement', verbose_name='–í—ã–±—Ä–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ')),
                ('background_color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.color', verbose_name='–¶–≤–µ—Ç —Ñ–æ–Ω–∞')),
            ],
            options={
                'verbose_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                'verbose_name_plural': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
