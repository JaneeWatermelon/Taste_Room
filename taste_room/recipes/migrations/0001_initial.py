# Generated by Django 5.1.6 on 2025-05-12 09:39

import datetime
import django.core.validators
import django.utils.timezone
import recipes.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, default='djangodbmodelsfieldscharfield', verbose_name='Ссылочное название')),
                ('icon', models.FileField(upload_to=recipes.models.ingredient_image_path, verbose_name='Иконка')),
                ('calory_count', models.PositiveSmallIntegerField(default=0, verbose_name='Кол-во калорий')),
                ('weight_per_unit', models.PositiveSmallIntegerField(default=0, verbose_name='Вес 1 штуки')),
                ('popularity', models.PositiveSmallIntegerField(default=0, verbose_name='Популярность')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, default='djangodbmodelsfieldscharfield', verbose_name='Ссылочное название')),
                ('description_inner', models.TextField(max_length=1024, null=True, verbose_name='Описание внутри')),
                ('description_card', models.CharField(max_length=64, null=True, verbose_name='Описание для карточки')),
                ('video_url_first', models.URLField(blank=True, null=True, verbose_name='Основная ссылка на видео')),
                ('video_url_second', models.URLField(blank=True, null=True, verbose_name='Запасная ссылка на видео')),
                ('cook_time_full', models.DurationField(default=datetime.timedelta(0), verbose_name='Полное время приготовления')),
                ('cook_time_active', models.DurationField(default=datetime.timedelta(0), verbose_name='Активное время приготовления')),
                ('portions', models.PositiveSmallIntegerField(default=0, verbose_name='Порции')),
                ('rating', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)], verbose_name='Рейтинг')),
                ('published_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('scipy', models.PositiveSmallIntegerField(choices=[(1, 'Без остроты'), (2, 'Слабая острота'), (3, 'Умеренно остро'), (4, 'Достаточно остро'), (5, 'Очень остро!')], verbose_name='Острота')),
                ('difficulty', models.PositiveSmallIntegerField(choices=[(1, 'Новичок'), (2, 'Нормально'), (3, 'Требует опыта'), (4, 'Для продвинутых'), (5, 'Профессионал')], verbose_name='Сложность')),
                ('popularity', models.PositiveSmallIntegerField(default=0, verbose_name='Популярность')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Опубликовано'), (2, 'Не опубликовано'), (3, 'Черновик'), (4, 'На проверке')], verbose_name='Статус')),
                ('status_updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Время обновления статуса')),
                ('visibility', models.PositiveSmallIntegerField(choices=[(1, 'Все'), (2, 'Только в профиле'), (3, 'Только подписчики'), (4, 'Только я')], verbose_name='Видимость')),
                ('cache_version', models.PositiveSmallIntegerField(default=0, verbose_name='Версия кэша')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='RecipeComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='', max_length=1024, verbose_name='Текст')),
                ('image', models.ImageField(blank=True, null=True, upload_to=recipes.models.recipe_comments_image_path, verbose_name='Изображение')),
                ('published_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('likes', models.PositiveSmallIntegerField(default=0, verbose_name='Кол-во лайков')),
                ('dislikes', models.PositiveSmallIntegerField(default=0, verbose_name='Кол-во дизлайков')),
            ],
            options={
                'verbose_name': 'Комментарий к рецепту',
                'verbose_name_plural': 'Комментарии к рецептам',
                'ordering': ['author'],
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Количество')),
                ('unit', models.CharField(choices=[('г', 'Граммы'), ('кг', 'Килограммы'), ('л', 'Литры'), ('мл', 'Миллилитры'), ('ст', 'Стаканы'), ('ст.л.', 'Столовые ложки'), ('ч.л.', 'Чайные ложки'), ('шт', 'Штуки'), ('щеп', 'Щепотки')], max_length=64, verbose_name='Размерность')),
                ('can_exclude', models.BooleanField(default=False, verbose_name='Можно убрать')),
            ],
            options={
                'verbose_name': 'Ингредиент в рецепте',
                'verbose_name_plural': 'Ингредиенты в рецептах',
            },
        ),
        migrations.CreateModel(
            name='RecipePreview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preview_1', models.ImageField(upload_to=recipes.models.recipe_preview_image_path, verbose_name='Превью 1')),
                ('preview_2', models.ImageField(blank=True, null=True, upload_to=recipes.models.recipe_preview_image_path, verbose_name='Превью 2')),
                ('preview_3', models.ImageField(blank=True, null=True, upload_to=recipes.models.recipe_preview_image_path, verbose_name='Превью 3')),
            ],
            options={
                'verbose_name': 'Превью в рецепте',
                'verbose_name_plural': 'Превью в рецептах',
            },
        ),
        migrations.CreateModel(
            name='RecipeReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Рейтинг')),
            ],
            options={
                'verbose_name': 'Оценка рецепта',
                'verbose_name_plural': 'Оценки рецептов',
            },
        ),
        migrations.CreateModel(
            name='RecipeStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=recipes.models.recipe_step_image_path, verbose_name='Изображение')),
                ('text', models.TextField(max_length=512, verbose_name='Текст')),
                ('sort_order', models.PositiveSmallIntegerField(default=0, verbose_name='Позиция')),
            ],
            options={
                'verbose_name': 'Шаг в рецепте',
                'verbose_name_plural': 'Шаги в рецептах',
                'ordering': ['sort_order'],
            },
        ),
    ]
